{
    "rules": {
      "html": {
        "use-doctype-declaration": "Each HTML page needs the doctype declaration in order to tell the browser which version of HTML is written in - <!DOCTYPE html>. For more information please see:https://www.freecodecamp.org/news/what-is-the-doctype-declaration-in-html/#:~:text=The%20HTML%20document%20type%20declaration,way%20by%20different%20web%20browsers | See course content --> A Basic HTML page: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-html?nav=programme#a-basic-html-page ",
        "use-semantic-elements": "The HTML page needs to be semantic in that the appropriate tags are used as intended. For more information please see https://www.semrush.com/blog/semantic-html5-guide/ | See course content --> Semantics: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-html?nav=programme#semantics",
        "use-english-as-language": "The 'lang' attribute needs to specify the langauge of the document as 'en' for English. For more information please see:: https://www.geeksforgeeks.org/what-is-the-difference-between-html-langen-and-html-langen-us/ | See course content --> : https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-html?nav=programme#a-basic-html-page ",
        "include-alt-text-for-images": "Add descriptive alt text to all <img> elements. See these resources for more information: https://www.semrush.com/blog/alt-text/ | See course content --> Images in HTML: https://mollify.noroff.dev/content/feu1/html-css/module-2/images-icons#images-in-html",
        "alt-text-free-from-image-picture-photo-words": "Alt text should not include the words 'photo', 'image' or 'photograph' in the description. See these resources for more information: https://www.semrush.com/blog/alt-text/ | See course content --> Images in HTML: https://mollify.noroff.dev/content/feu1/html-css/module-2/images-icons#images-in-html",
        "no-inline-css": "CSS is meant to be kept in a separate stylesheet and not within the HTML page. See these resources for more information: https://stackoverflow.com/questions/25469845/is-it-more-efficient-to-have-a-external-css-stylesheet | See course content --> Create a Stylesheet and Link To HTML: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-css?nav=programme#create-a-stylesheet-and-link-to-html",
        "unique-meta-description-provided": "Each HTML page requires a unique meta description that tells the user what the web application is about. See these resources for more information: https://www.seobility.net/en/wiki/Meta_Description | See course content --> A Basic HTML Page:https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-html?nav=programme#a-basic-html-page",
        "unique-title-provided": "Each HTML page requires a unique title that encapsulates the page's context, such as <title>About</title>. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title | See course content --> A Basic HTML Page: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-html?nav=programme#a-basic-html-page",
        "unique-<h1>-provided": "Each HTML page requires a unique <h1> element that serves as the most important heading on the page. See these resources for more information: https://www.seoptimer.com/blog/h1-html-tag/ | See course content --> A Basic HTML Page: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-html?nav=programme#a-basic-html-page",
        "single-<h1>-provided": "Each HTML page requires only one <h1> element. For more information please see:: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#avoid_using_multiple_h1_elements_on_one_page | See course content --> A Basic HTML Page: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-html?nav=programme#a-basic-html-page",
        "does-not-misuse-<br>-tags": "<br> tags should not be used to insert a new line, insert your text that you wish to have on the next line inside a block level element. See these resources for more information: https://stackoverflow.com/questions/1726073/is-it-sometimes-bad-to-use-br | See course content --> A Basic HTML Page: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-html?nav=programme#a-basic-html-page",
        "html-is-well-formatted": "Ensure that you have Prettier installed for your formatting. See these resources for more information: https://blog.sethcorker.com/why-prettier-will-make-you-a-more-productive-programmer/ | See course content --> Good Formatting: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-html?nav=programme#good-formatting",
        "validate-html": "Always validate your HTML to ensure it's free of errors and follows standards. See these resources for more information: https://www.youtube.com/watch?v=BTOCB-CusmY&ab_channel=TechTalkTutorials | See course content --> Testing and Validation: https://mollify.noroff.dev/content/feu1/html-css/module-4/bug-fixing?nav=programme#testing-and-validation",
        "anchor-tags-used-for-linking-pages-together": "Add anchor tags (<a></a>))to link pages together. See these resources for more information: https://www.semrush.com/blog/html-a-tag/ | See course content --> Nav element: https://mollify.noroff.dev/content/feu1/html-css/module-2/navigation?nav=programme#nav-element",
        "implement-single-navigation-structure": "Implement a single, consistent navigation structure across all pages of your website. See these resources for more information: https://www.nngroup.com/articles/web-navigation-basics/ | See course content -->  https://mollify.noroff.dev/content/feu1/html-css/module-2/navigation?nav=programme#nav-element",
        "use-heading-hierarchy": "The headings should be used in hierarchical order and should not skip levels. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements | See course content --> Nav element: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-html?nav=programme#semantics",
        "use-footer-for-additional-info": "Additional information and links to documents such as Terms and Conditions or Privacy Policy needs to be supplied in the footer. See these resources for more information: https://blog.hubspot.com/website/website-footer | See course content --> A Basic HTML Page: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-html?nav=programme#a-basic-html-page",
        "use-meta-viewport": "Each HTML page requires a meta viewport tag in order to access the viewport dimensions of the screen it is being displayed on for responsiveness. See these resources for more information: https://www.semrush.com/blog/viewport-meta-tag/ | See course content --> A Basic HTML Page: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-html?nav=programme#a-basic-html-page",
        "use-favicon": "Favicons should appear in the corner of the website tab for added branding. See these resources for more information: https://mailchimp.com/resources/favicon-guide/ | See course content --> A Basic HTML Page: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-html?nav=programme#a-basic-html-page",
        "use-main-within-body": "The <main> element needs to be nested within the <body> element. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main | See course content --> A Basic HTML Page: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-html?nav=programme#a-basic-html-page",
        "use-nav-element": "Each HTML page should use the <nav> element for primary navigation. See this resouce for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav | See course content --> A Basic HTML Page: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-html?nav=programme#a-basic-html-page",
        "use-relative-file-paths": "Using absolute pathing makes your code less portable and maintainable, rather use relative file paths. See these resources for more information: https://www.youtube.com/watch?v=hxto_sRZsBg&ab_channel=kootkot | See course content --> Organising files: https://mollify.noroff.dev/content/feu1/html-css/module-1/file-management?nav=programme#organising-files",
        "use-srcset-for-responsive-images": "Using srcset allows the image to default to the smallest and fastest version of itself, resulting in better performance. For more information please see:: https://css-tricks.com/a-guide-to-the-responsive-images-syntax-in-html/#using-srcset | See course content --> Images in HTML: https://mollify.noroff.dev/content/feu1/html-css/module-2/images-icons?nav=programme#images-in-html",
        "choose-appropriate-image-format": "Not all image formats have equal browser support, use PNG or JPG format. See these resources for more information:https://designpowers.com/blog/image-file-formats | See course content --> Images and Icons: https://mollify.noroff.dev/content/feu1/html-css/module-2/images-icons?nav=programme#introduction",
        "compress-images-for-web": "Large images slow web applications down, aim for a maximum of 200KB per image size. See these resources for more information: https://www.shrink.media/blog/image-compressor-tools | See course content --> Images: https://mollify.noroff.dev/content/feu1/html-css/module-1/file-management?nav=programme#images",
        "no-spaces-in-file-names": "Avoid using spaces in file names to prevent issues with URLs and file paths, rather use hyphens or underscores instead. See these resources for more information: https://instr.iastate.libguides.com/datashare/filenames#:~:text=Avoid%20spaces&text=Spaces%20are%20not%20supported%20by,dashes%20(%2D)%20or%20underscores%20(_)./ | See course content --> Images: https://mollify.noroff.dev/content/feu1/html-css/module-1/file-management?nav=programme#images",
        "avoid-setting-width-height-in-html": "Avoid setting width and height attributes directly in HTML elements. Use CSS for styling instead. See these resources for more information: https://stackoverflow.com/questions/1247685/should-i-specify-height-and-width-attributes-for-my-imgs-in-html | See course content -->  Images in HTML: https://mollify.noroff.dev/content/feu1/html-css/module-2/images-icons?nav=programme#images-in-html",
        "use-semantic-form-elements": "Use semantic form elements like <fieldset>, <legend>, and <label> to improve accessibility and structure. See these resources for more information: https://dequeuniversity.com/rules/axe/4.1/label | See course content --> Inputs: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#inputs",
        "always-include-name-in-form-inputs": "Ensure each form input has a name attribute associated with it. See these resources for more information: https://css-tricks.com/html-inputs-and-labels-a-love-story/#aa-how-to-pair-a-label-and-an-input | See course content --> Inputs: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#inputs",
        "include-label-elements": "Include <label> elements for all form inputs to improve accessibility. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Text_labels_and_names | See course content --> Inputs: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#inputs",
        "use-appropriate-input-types": "Use appropriate input types (e.g., email, tel, date) to provide better user experience and form validation. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#input_types | See course content --> Inputs: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#inputs",
        "use-action-attribute": "Always include the action attribute in your form to specify where the form data should be sent. See these resources for more information: https://developer.mozilla.org/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data#the_action_attribute | See course content --> Inputs: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#inputs",
        "use-method-attribute": "Specify the HTTP method (GET or POST) using the method attribute in your form. See these resources for more information: https://html.com/attributes/form-method/#:~:text=%3D%E2%80%9DPOST%E2%80%9D%3E-,The%20method%20attribute%20of%20the%20form%20element%20tells%20the%20web,sensitive%20information%2C%20such%20as%20passwords | See course content --> Inputs: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#inputs",
        "associate-labels-with-inputs": "Associate labels with inputs using the 'for' attribute or by nesting the input inside the label. See these resources for more information: https://web.dev/articles/labels-and-text-alternatives#label_form_elements | | See course content --> Labels: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#inputs",
        "use-button-elements-to-submit-form": "Use <button type='submit'> elements for form submission instead of input type='submit'. See these resources for more information: https://stackoverflow.com/questions/37736056/button-type-button-vs-submit | See course content --> Inputs: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#inputs",
        "distinguish-buttons-from-links": "Clearly distinguish buttons from links in both appearance and functionality. See these resources for more information: https://uxmovement.com/buttons/when-to-use-a-button-or-link/ and https://www.manypixels.co/blog/web-design/cta-button-design | See course content --> Keyboard Navigation: https://mollify.noroff.dev/content/feu1/html-css/module-5/accessibility?nav=programme#keyboard-navigation",
        "provide-placeholder-text-for-inputs": "Use placeholder text to provide hints or examples of expected input. See these resources for more information: https://www.tiny.cloud/blog/placeholder-text-best-practices/ | See course content --> Inputs: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#inputs",
        "use-required-attribute-for-mandatory-fields": "Use the required attribute for form fields that must be filled out. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/required | See course content --> Validation: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#validation",
        "implement-proper-form-validation": "Implement validation that prevents unexpected or invalid data being submitted from the form. See these resources for more information: https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation | See course content -->  Validation: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#validation",
        "provide-clear-error-messages-for-invalid-inputs": "Display clear, specific error messages when form inputs are invalid. See these resources for more information: https://www.nngroup.com/articles/error-message-guidelines/ | See course content --> Inputs: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#inputs",
        "use-input-pattern-attribute-for-specific-formats": "Use the pattern attribute to specify a regular expression for input validation. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern | See course content --> Validation:https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#validation",
        "use-datalist-for-input-suggestions": "Use the <datalist> element to provide input suggestions for form fields. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist | See course content --> Datalist: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#datalist",
        "match-label-for-attribute-with-input-id": "Ensure the 'for' attribute of labels matches the 'id' of the associated input element. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label#using_the_for_attribute | See course content --> Labels: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#inputs",
        "use-checked-attribute-for-default-radio-selection": "Use the 'checked' attribute to set a default selection for radio buttons. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio | See course content --> Radio Buttons: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#inputs",
        "use-descriptive-labels-for-radio-buttons": "Provide clear, descriptive labels for radio buttons to improve usability. See these resources for more information: https://balsamiq.com/learn/ui-control-guidelines/radio-buttons/ | See course content --> Radio Buttons:https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#inputs",
        "use-fieldset-and-legend-for-radio-button-groups": "Wrap radio button groups in a <fieldset> with a <legend> to provide context. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset | See course content --> Datalist: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#datalist",
        "ensure-radio-buttons-are-keyboard-accessible": "Make sure radio buttons can be navigated and selected using keyboard controls. See these resources for more information: https://stackoverflow.com/questions/51480632/make-custom-radio-control-accessible-to-screen-readers | See course content --> Keyboard Navigation: https://mollify.noroff.dev/content/feu1/html-css/module-5/accessibility?nav=programme#keyboard-navigation",
        "radio-buttons-have-aria-attributes": "Add appropriate ARIA attributes to radio buttons for improved accessibility. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/radio_role | https://mollify.noroff.dev/content/feu1/html-css/module-5/accessibility?nav=programme#aria-accessible-rich-internet-applications",
        "ensure-checkbox-labels-are-clickable": "Make checkbox labels clickable to toggle the checkbox state. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox | See course content --> Types: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#inputs",
        "use-select-element-for-option-lists": "Use the <select> element to create dropdown lists of options. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select | See course content -->  Select:https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#select",
        "provide-value-attributes-for-select-options": "Always include 'value' attributes for <option> elements within a <select>. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option | See course content --> Select: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#select",
        "use-label-element-for-select-inputs": "Associate <label> elements with <select> inputs for better accessibility. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label | See course content --> Label: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#inputs",
        "use-textarea-for-multi-line-text-input": "Use the <textarea> element for multi-line text input fields. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea | See course content --> Datalist: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#datalist",
        "ensure-fieldsets-are-properly-nested": "Properly nest <fieldset> elements to group related form controls. See these resources for more information: https://forum.freecodecamp.org/t/how-to-nest-fieldset/511794 | See course content --> Datalist: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#datalist",
        "use-minlength-and-maxlength-attributes-in-inputs-when-appropriate": "Use 'minlength' and 'maxlength' attributes to set input length restrictions. See these resources for more information: https://www.wufoo.com/html5/minmaxstep-attributes/ | See course content --> Validation:://mollify.noroff.dev/content/feu1/html-css/module-2/forms?nav=programme#validation",
        "utilize-aria-labelledby": "Use 'aria-labelledby' to associate descriptive text with form controls. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby | See course content --> Aria Accessible Rich Internet Applications: https://mollify.noroff.dev/content/feu1/html-css/module-5/accessibility?nav=programme#aria-accessible-rich-internet-applications",
        "apply-aria-describedby": "Use 'aria-describedby' to provide additional descriptive information for form elements. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-describedby | See course content --> Aria Accessible Rich Internet Applications: https://mollify.noroff.dev/content/feu1/html-css/module-5/accessibility?nav=programme#aria-accessible-rich-internet-applications",
        "ensure-inputs-are-keyboard-accessible": "Make sure all form inputs can be navigated and interacted with using a keyboard. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Keyboard#interactive_elements_must_be_able_to_be_activated_using_a_keyboard | See course content --> Keyboard Navigation: https://mollify.noroff.dev/content/feu1/html-css/module-5/accessibility?nav=programme#keyboard-navigation",
        "use-aria-labels-for-improved-accessibility": "Use 'aria-label' to provide accessible names for elements when visible text labels are not present. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label | See course content --> Keyboard Navigation: https://mollify.noroff.dev/content/feu1/html-css/module-5/accessibility?nav=programme#keyboard-navigation",
        "use-appropriate-aria-roles": "Apply appropriate ARIA roles to elements to define their purpose. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles | See course content --> Aria Accessible Rich Internet Application: https://mollify.noroff.dev/content/feu1/html-css/module-5/accessibility?nav=programme#aria-accessible-rich-internet-applications",
        "use-source-element-for-media-files": "Use <source> elements within <audio> or <video> to specify multiple media files. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source | See course content --> Source: https://mollify.noroff.dev/content/feu1/html-css/module-5/multimedia?nav=programme#source",
        "use-audio-element-for-embedding-sound": "Use the <audio> element to embed sound content in your web pages. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio | See course content --> Audio: https://mollify.noroff.dev/content/feu1/html-css/module-5/multimedia?nav=programme#audio",
        "include-controls-attribute-for-user-interaction": "Include the 'controls' attribute in <audio> and <video> elements to allow user interaction. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-controls | See course content --> Audio: https://mollify.noroff.dev/content/feu1/html-css/module-5/multimedia?nav=programme#audio",
        "use-autoplay-and-loop-attributes-appropriately": "Use 'autoplay' and 'loop' attributes for media elements judiciously to avoid user annoyance. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/Media/Autoplay_guide | See course content --> Audio: https://mollify.noroff.dev/content/feu1/html-css/module-5/multimedia?nav=programme#audio",
        "use-video-element-for-embedding-video-content": "Use the <video> element to embed video content in your web pages. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video | See course content --> Audio: https://mollify.noroff.dev/content/feu1/html-css/module-5/multimedia?nav=programme#audio",
        "specify-width-and-height-for-video-players": "Specify width and height for video players to prevent layout shifts during loading. See these resources for more information: https://www.geeksforgeeks.org/how-to-set-the-height-and-width-of-the-video-player-in-html5/ | See course content --> Video: https://mollify.noroff.dev/content/feu1/html-css/module-5/multimedia?nav=programme#video",
        "use-poster-attribute-for-video-thumbnails": "Use the 'poster' attribute to provide a thumbnail image for video content. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-poster | See course content --> Video: https://mollify.noroff.dev/content/feu1/html-css/module-5/multimedia?nav=programme#video",
        "use-iframe-for-embedding-external-content": "Use the <iframe> element to embed external content in your web pages. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe | See course content --> Iframe: https://mollify.noroff.dev/content/feu1/html-css/module-5/multimedia?nav=programme#iframe",
        "specify-src-width-and-height-for-iframes": "Always specify 'src', 'width', and 'height' attributes for iframes. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attributes | See course content --> Iframe: https://mollify.noroff.dev/content/feu1/html-css/module-5/multimedia?nav=programme#iframe",
        "embed-google-maps-using-iframe": "Embed Google Maps using the iframe method provided by Google Maps. See these resources for more information: https://www.youtube.com/watch?v=KIC0OK9nKXY&ab_channel=GeekTutorials | See course content --> Iframe: https://mollify.noroff.dev/content/feu1/html-css/module-5/multimedia?nav=programme#iframe",
        "embed-external-webpages-using-iframe": "Use iframes to embed external web pages, ensuring proper security measures are in place. See these resources for more information: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#security_and_privacy_concerns | See course content --> Combining Selectors: Course Content: https://mollify.noroff.dev/content/feu1/html-css/module-5/multimedia?nav=programme#iframe"
      },
      "css": {
        "use DRY CSS": "The DRY (Don't Repeat Yourself) principle in CSS emphasizes creating reusable styles and avoiding redundancy by using classes, mixins, and variables to ensure maintainable and efficient code. See this resource for more information: https://en.wikipedia.org/wiki/Don%27t_repeat_yourself | See course content --> Combining Selectors: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-css?nav=undefined",
        "considers-specificity": "Specificity is a system that determines which style rule applies to an element when multiple rules conflict. It's based on the types of selectors used (like ID, class, or element name) and their order of appearance. The more specific a selector, the higher its priority. See this resource for more information: https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity | See course content --> Cascading, Specificity and Inheritance: https://mollify.noroff.dev/content/feu1/html-css/module-1/intro-css?nav=undefined",
        "use-external-stylesheet": "External style sheets improve efficiency and maintainability by separating content from presentation, allowing for easier updates and consistent styling across multiple pages. See this resource for more information: https://****",
        "use-meaningful-class-names": "Use descriptive class names that accurately reflect the element's purpose and appearance for improved code readability and maintainability. See this resource for more information: https://****",
        "follows-cascading-rules": "Cascading rules in CSS determine which styles are applied to an element when multiple styles conflict by considering factors like the specificity of selectors, the order of stylesheets, and inheritance. See this resource for more information: https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance",
        "use-id-selectors-sparingly": "CSS IDs are unique identifiers assigned to HTML elements, allowing for precise styling of specific elements on a page. They are represented by a hashtag (#) followed by the ID name in CSS selectors. While powerful, they should be used sparingly to avoid structural dependencies and maintain flexibility. See this resource for more information: https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors/Type_Class_and_ID_Selectors#id_selectors",
        "use-class-selectors": "CSS classes are used to group HTML elements and apply specific styles to them. They provide a flexible way to reuse styles across multiple elements, enhancing code maintainability and organization. Unlike IDs, multiple elements can share the same class, enabling consistent styling of similar elements. See this resource for more information: https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors/Type_Class_and_ID_Selectors#class_selectors",
        "use-css-variables": "CSS variables (also known as Custom Properties) allow you to create variables you can reuse throughout your stylesheet. It not only helps you follow the DRY (Don’t Repeat Yourself) principle but also makes the code easier to read. See this resource for more information: https://mollify.noroff.dev/content/feu1/html-css/module-4/css-variables",
        "use-stylesheet-imports": "CSS imports allow you to incorporate styles from external CSS files into your main stylesheet. They are commonly used to add new styles to an existing stylesheet. See this resource for more information: https://developer.mozilla.org/en-US/docs/Web/CSS/@import",
        "use-font-imports": "Font imports allow you to use custom fonts on your website, enhancing visual appeal and branding, by specifying font files to be downloaded and rendered on the user's device. See this resource for more information: https://developer.mozilla.org/en-US/docs/Web/CSS/@import",
        "use-max-width-for-flexible-images": "Using max-width on images ensures they scale proportionally to their container, preventing distortion and maintaining image quality across different screen sizes. See this resource for more information: https://developer.mozilla.org/en-US/docs/Web/CSS/max-width",
        "use-percentage-em-and-rem-units-for-responsive-images": "Percentage, em, and rem units are used for responsive images to ensure they adapt to different screen sizes and maintain image quality. These units promote responsiveness and accessibility by accommodating various screen sizes and user settings. See this resource for more information: https://mollify.noroff.dev/content/feu1/html-css/module-2/images-icons",
        "implement-css-only-hamburger-menu": "A CSS-only hamburger menu creates a responsive navigation menu using solely CSS, improving performance, accessibility, and control. See this resource for more information: https://mollify.noroff.dev/content/feu1/html-css/module-2/navigation?nav=undefined",
        "preserve-image-aspect-ratio": "Preserving the image aspect ratio maintains the original proportions of an image, preventing distortion and ensuring it looks visually appealing on different screen sizes. See this resource for more information: https://mollify.noroff.dev/content/feu1/html-css/module-2/images-icons",
        "use-object-fit-for-image-cropping": "Object fit is a CSS property that allows you to crop an image to fit inside a container while preserving its original aspect ratio. See this resource for more information: https://mollify.noroff.dev/content/feu1/html-css/module-2/images-icons",
        "use-border-radius-for-rounded-images": "Use the border-radius property to create rounded corners for images. See this resource for more information: https://mollify.noroff.dev/content/feu1/html-css/module-2/images-icons",
        "use-background-image-property": "Use the background-image property to add images as backgrounds. See this resource for more information: https://mollify.noroff.dev/content/feu1/html-css/module-2/images-icons",
        "set-background-size-and-repeat": "Allows you to control background image size and repetition with background-size and background-repeat. See this resource for more information: https://mollify.noroff.dev/content/feu1/html-css/module-2/images-icons",
        "style-form-elements": "Customize the appearance of form elements like inputs, buttons, and labels to match your design. See this resource for more information: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms",
        "style-links-and-cta-buttons": "Design links and call-to-action buttons and anchor tags, especially for call-to-action elements. See this resource for more information: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms",
        "apply-box-model-properties": "The box model includes properties like width, height, padding, border, and margin to control element dimensions and spacing. See this resource for more information: https://mollify.noroff.dev/content/feu1/html-css/module-2/forms",
        "set-padding-for-spacing": "Padding is used to create space inside an element, between its content and its border.",
        "use-margin-for-spacing": "Margin is used to create space outside an element, between the element and its neighbors.",
        "implement-responsive-design": "Create layouts that adapt to different screen sizes using media queries.",
        "use-shorthand-properties": "Combine multiple properties into a single declaration for efficiency, allowing you to set multiple CSS properties in a single line.",
        "use-media-queries": "Media queries allow you to apply different styles based on the device's characteristics, typically its width.",
        "implement-mobile-first-approach": "Design for mobile devices first and then adapt for larger screens. (This is a design methodology rather than a specific CSS rule, but it's important to consider).",
        "use-grid-and-flexbox": "Utilize Grid and Flexbox for efficient and responsive layouts.",
        "does-not-misuse-position-absolute": "Avoid excessive use of position: absolute; as it can complicate layout and maintenance. Use it sparingly and appropriately.",
        "ensure-color-contrast-for-input-elements": "Provide sufficient color contrast between input elements and their backgrounds.",
        "use-css-for-responsive-textarea-sizing": "Adjust textarea size based on screen size using CSS.",
        "ensure-proper-contrast-for-form-elements": "Maintain adequate color contrast for all form elements.",
        "apply-consistent-styling-to-input-types": "Use consistent styles for different input types (text, email, etc.).",
        "provide-visual-cues-for-form-validation-states": "Indicate valid and invalid form elements, using pseudo-classes based on their state.",
        "apply-flex-wrap-for-multi-line-flex-containers": "Use flex-wrap: wrap; to allow flex items to wrap onto multiple lines when they exceed the container's width.",
        "use-flex-property-to-control-item-sizing": "Employ the flex shorthand or flex-grow, flex-shrink, and flex-basis for item sizing.",
        "apply-justify-content-for-main-axis-alignment": "Align items along the main axis with justify-content.",
        "use-align-items-for-cross-axis-alignment": "Align items along the cross axis with align-items.",
        "implement-gap-property-for-flex-item-spacing": "The gap property is a powerful feature for creating consistent spacing between flex items without using margins. The gap property simplifies the process of adding space between flex items, eliminating the need for margin hacks or extra wrapper elements. It's a clean and efficient way to manage spacing in flex layouts.",
        "use-align-self-for-individual-item-alignment": "Override default alignment for specific items with align-self.",
        "implement-flex-flow-shorthand-for-direction-and-wrap": "Combine flex-direction and flex-wrap into flex-flow.",
        "apply-margin-auto-for-flexbox-alignment": "Center items within the container using margin: 0 auto;.",
        "use-min-width-and-max-width-with-flex-items": "Set minimum and maximum widths for flex items using min-width and max-width.",
        "use-display-grid-for-grid-layout": "Grid layout is a powerful CSS layout system that allows you to create complex two-dimensional layouts with rows and columns. It's particularly useful for overall page structures and for aligning items both horizontally and vertically in a predictable way.",
        "use-display-flex-for-flex-layout": "The display: flex property is used to create a flex container, which enables a flexible box layout for its child elements (flex items). Using display: flex allows for creating versatile and responsive layouts that adapt well to different screen sizes and content amounts. It's particularly useful for one-dimensional layouts (either in a row or a column).",
        "set-grid-template-rows-for-row-structure": "The grid-template-rows property is used to define the structure of rows in a CSS grid layout. This property allows you to specify the size and number of rows in your grid",
        "use-fr-unit-for-flexible-grid-tracks": "Employ the fr unit for flexible grid track sizing to create adaptable layouts that distribute available space proportionally.",
        "assign-grid-area-names-to-grid-items": "Grid area names allow you to assign descriptive labels to grid items, simplifying their placement and arrangement within a grid container using the grid-area property.",
        "use-repeat-function-for-concise-grid-definitions": "The `repeat()` function in CSS Grid enables concise and efficient creation of multiple grid tracks with identical or repeating patterns, reducing code redundancy and improving readability.",
        "implement-auto-fill-and-auto-fit-for-responsive-grids": "`auto-fill` and `auto-fit` keywords in CSS Grid create flexible, responsive layouts by automatically adjusting the number of tracks based on container size and content, optimizing space utilization without media queries.",
        "use-grid-areas-for-responsive-layout-changes": "Grid areas allow for easy rearrangement of layout elements across different screen sizes by using named template areas, enabling responsive design without changing the HTML structure.",
        "use-grid-column-and-grid-row-for-item-positioning": "Grid areas allow for easy rearrangement of layout elements across different screen sizes by using named template areas, enabling responsive design without changing the HTML structure.",
        "set-appropriate-breakpoints-for-different-devices": "Set breakpoints at key screen widths where your layout needs to adapt, typically around common device sizes, to create a responsive design that works well across various screen dimensions.",
        "use-orientation-media-query-for-device-rotation": "The orientation media query allows you to apply different styles based on whether a device is in portrait or landscape mode, enabling responsive layouts that adapt to device rotation.",
        "apply-fixed-positioning-for-elements-unaffected-by-scrolling": "Fixed positioning keeps elements in a constant position on the screen regardless of scrolling, useful for creating persistent headers, navigation bars, or floating elements.",
        "implement-sticky-positioning-for-persistent-ui-elements": "Sticky positioning allows elements to switch between relative and fixed positioning based on scroll position, creating UI components that remain visible within a specified range of scroll.",
        "use-z-index-to-control-stacking-order-of-elements": "The z-index property controls the stacking order of positioned elements, determining which elements appear on top of others in overlapping situations.",
        "use-clear-property-to-control-element-flow": "The clear property prevents elements from floating beside previously floated elements, controlling the flow of elements within a layout.",
        "use-media-queries-to-adjust-typography-for-readability": "Media queries enable responsive typography by allowing you to adjust font sizes, line heights, and other text properties based on screen size, ensuring optimal readability across devices.",
        "apply-media-queries-for-print-styles": "Media queries for print styles allow you to create specialized CSS rules that optimize your web content for printed output, adjusting layout, hiding unnecessary elements, and improving readability on paper.",
        "apply-media-queries-to-change-grid-layouts-responsively": "Media queries enable responsive grid layouts by allowing you to adjust grid properties such as column count, size, and placement based on screen width, adapting the layout for different devices.",
        "implement-device-specific-styles-using-media-queries": "Media queries allow you to apply specific styles based on device characteristics like screen size, resolution, or orientation, enabling tailored designs for different devices.",
        "avoid-overusing-animations":"Use animations sparingly and purposefully to enhance user experience without causing distraction or performance issues.",
        "use-hover-for-animation-transition-triggers": "The :hover pseudo-class triggers animations or transitions when users move their cursor over an element, providing interactive feedback without requiring clicks.",
        "set-animation-transition-duration": "Use the transition-duration property to control the speed of CSS transitions, ensuring smooth and appropriate animation timing for a better user experience.",
        "uses-animation-transitions-for-smooth-changes": "CSS transitions create smooth, gradual changes between property values, enhancing user experience by making interface changes more fluid and less abrupt.",
        "defines-keyframes-for-animations": "Specifies the animation sequence by defining key points and styles for an element as it animates.",
        "use-css-variables-for-reusability":"Utilize CSS custom properties (variables) to store and reuse values across your stylesheets for improved maintainability and flexibility.",
        "declares-variables-with-double-dash":"Defines custom CSS properties (variables) using a double dash (--) prefix for the property name.",
        "set-global-variables-in-root":"Declare CSS custom properties (variables) in the :root pseudo-class to make them globally accessible throughout the stylesheet.",
        "use-var-function-to-apply-variables":"Apply CSS custom properties using the var() function to insert the variable's value in property declarations.",
        "be-aware-of-ie-compatibility":"Consider Internet Explorer's lack of support for CSS custom properties when using them in projects that require IE compatibility.",
        "provide-fallback-values-if-needed":"Specify fallback values within the var() function to ensure styling when a CSS custom property is not defined or supported.",
        "use-import-rule-for-organization":"Employ the @import rule to include external stylesheets, promoting modular organization of CSS code.",
        "implement-proper-focus-management":"Ensure interactive elements have clear visual focus indicators and can be navigated using keyboard controls for improved accessibility.",
        "create-custom-loaders": "Design and implement custom loading animations or indicators using CSS to provide visual feedback during content or process loading.",
        "style-details-and-summary-elements": "Customize the appearance of <details> and <summary> elements to create visually appealing and interactive expandable/collapsible content sections."
      }
    }
  }